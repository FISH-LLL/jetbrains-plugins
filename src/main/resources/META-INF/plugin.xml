<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.github.fishlll.jetbrainsplugins</id>
    <name>TrainPlugin</name>

    <!-- Text to display as company information on Settings | Plugin page -->
    <vendor>fish-lll</vendor>

    <!-- Indicate this plugin can be loaded in all IntelliJ Platform-based products. -->
<!--    https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html#modules-specific-to-functionality-->
<!--    https://plugins.jetbrains.com/docs/intellij/webstorm.html#available-webstorm-apis 依赖com.intellij.modules.platform 就支持 JS-->
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.platform</depends>

    <resource-bundle>messages.MyBundle</resource-bundle>
    <resource-bundle>messages.InspectionBundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow factoryClass="com.github.fishlll.jetbrainsplugins.toolWindow.MyToolWindowFactory"
                    id="MyToolWindow"/>

        <editorOptionsProvider instance="com.github.fishlll.jetbrainsplugins.settings.StarCoderSettingsProvider"/>
        <applicationService serviceImplementation="com.github.fishlll.jetbrainsplugins.StarCoderService"/>
        <applicationService serviceImplementation="com.github.fishlll.jetbrainsplugins.settings.StarCoderSettings"/>
        <!--状态栏小部件 https://plugins.jetbrains.com/docs/intellij/status-bar-widgets.html-->
        <statusBarWidgetFactory id="StarCoderFactory"
                                implementation="com.github.fishlll.jetbrainsplugins.StarCoderWidgetFactory"
                                order="after positionWidget"/>
        <editorActionHandler action="EditorTab" implementationClass="com.github.fishlll.jetbrainsplugins.actions.CodeGenTabAction"/>
        <notificationGroup id="StarCoder" displayType="STICKY_BALLOON" isLogByDefault="true"/>

        <!--
        显示路径: <b>Settings | Editor | Inspections | Java | Probable Bugs
      Extend the IntelliJ Platform local inspection type and connect it to the implementation class in this plugin.
      <localInspection> type element is applied within the scope of a file under edit. It is preferred over <inspectionToolProvider>
        @see intellij.platform.resources.LangExtensionPoints
        @see com.intellij.codeInspection.InspectionProfileEntry

      Attributes:
        - language - inspection language ID
        - shortName - not specified, will be computed by the underlying implementation classes
        - bundle - name of the message bundle for the "key" attribute
        - key - the key of the message to be shown in the Settings | Editor | Inspections panel
        - groupPath - defines the outermost grouping for this inspection in
            the Settings | Editor | Inspections panel. Not localized.
        - groupBundle - the name of a message bundle file to translate groupKey
            In this case, reuse an IntelliJ Platform bundle file from intellij.platform.resources.en
        - groupKey - the key to use for translation subgroup name using groupBundle file.
            In this case, reuse the IntelliJ Platform subcategory "Probable bugs"
        - enabledByDefault - inspection state when the Inspections panel is created.
        - level - the default level of error found by this inspection, e.g. INFO, ERROR, etc.
            @see com.intellij.codeHighlighting.HighlightDisplayLevel
        - implementationClass= the fully-qualified name of the inspection implementation class
    -->

        <!-- java 错误检查-->
        <localInspection language="JAVA"
                         bundle="messages.InspectionBundle"
                         key="inspection.comparing.string.references.display.name"
                         groupPath="Java"
                         groupBundle="messages.InspectionsBundle"
                         groupKey="group.names.probable.bugs"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.github.fishlll.jetbrainsplugins.codeInspection.ComparingStringReferencesInspection"/>

        <localInspection groupPath="JavaScript and TypeScript"
                         groupBundle="messages.InspectionsBundle"
                         bundle="messages.InspectionBundle"
                         enabledByDefault="true"
                         level="WARNING"
                         displayName="JSTest-displayName"
                         shortName="JSTest-shortName"
                         key="inspection.comparing.string.references.display.name"
                         groupKey="group.names.probable.bugs"
                         implementationClass="com.github.fishlll.jetbrainsplugins.codeInspection.JSInspection"
        />

    </extensions>

    <applicationListeners>
        <listener class="com.github.fishlll.jetbrainsplugins.listeners.MyApplicationActivationListener"
                  topic="com.intellij.openapi.application.ApplicationActivationListener"/>
    </applicationListeners>

    <actions>
        <group id="TrainPlugin.GreetingMenu" text="火车票" description="Greeting menu">
            <add-to-group group-id="MainMenu" anchor="last"/>
            <action id="com.github.fishlll.jetbrainsplugins.actions.HelloAction"
                    class="com.github.fishlll.jetbrainsplugins.actions.HelloAction"
                    text="Hello"
                    description="Says Hello"/>

            <action id="com.github.fishlll.jetbrainsplugins.actions.PsiNavigationDemoAction"
                    class="com.github.fishlll.jetbrainsplugins.actions.PsiNavigationDemoAction"
                    text="查看PSI信息">
                <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            </action>


            <!--编辑器中右键菜单-->
            <action class="com.github.fishlll.jetbrainsplugins.actions.CodeGenPromptAction"
                    id="com.github.fishlll.jetbrainsplugins.actions.CodeGenPromptAction"
                    text="对选择文本提示">
                <add-to-group group-id="EditorPopupMenu" anchor="first"/>
                <keyboard-shortcut first-keystroke="alt P" keymap="$default"/>
            </action>

            <action class="com.github.fishlll.jetbrainsplugins.actions.CodeGenInsertAllAction"
                    id="com.github.fishlll.jetbrainsplugins.actions.CodeGenInsertAllAction"
                    text="插入所有提示">
                <keyboard-shortcut first-keystroke="alt A" keymap="$default"/>
            </action>

            <action class="com.github.fishlll.jetbrainsplugins.actions.CodeGenInsertLineAction"
                    id="com.github.fishlll.jetbrainsplugins.actions.CodeGenInsertLineAction"
                    text="插入单行提示">
                <keyboard-shortcut first-keystroke="alt S" keymap="$default"/>
            </action>

        </group>

    </actions>
</idea-plugin>
